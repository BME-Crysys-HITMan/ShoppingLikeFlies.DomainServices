name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      - name: Install SonarCloud scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner --version 5.8.0
          dotnet tool install --global coverlet.console
          dotnet tool install --global dotnet-coverage
      - name: Install dependencies
        run: |
          dotnet restore
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin /k:"BME-Crysys-HITMan_ShoppingLikeFlies.DomainServices" /o:"bme-crysys-hitman" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.opencover.reportsPaths=coverage.xml /d:sonar.host.url="https://sonarcloud.io"
            /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build --no-incremental
          chmod -R 777 ./test/
          #coverlet ./test/DomainServices.UnitTest/bin/Debug/net6.0/DomainServices.UnitTest.dll --target "dotnet" --targetargs "test --no-build" -f=opencover -o="coverage.xml"
          #dotnet test --collect "Code Coverage"
          dotnet-coverage collect 'dotnet test' -f xml  -o 'coverage.xml'
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"